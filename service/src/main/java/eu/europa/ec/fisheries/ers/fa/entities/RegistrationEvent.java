package eu.europa.ec.fisheries.ers.fa.entities;

// Generated 06-May-2016 14:29:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ActivityRegistrationEvent generated by hbm2java
 */
@Entity
@Table(name = "activity_registration_event", schema = "activity")
public class RegistrationEvent implements java.io.Serializable {

	private int id;
	private RegistrationLocation registrationLocation;
	private String description;
	private Date occurrenceDatetime;
	private Set<VesselTransportMeans> vesselTransportMeanses = new HashSet<VesselTransportMeans>(
			0);

	public RegistrationEvent() {
	}

	public RegistrationEvent(int id,
			RegistrationLocation registrationLocation) {
		this.id = id;
		this.registrationLocation = registrationLocation;
	}

	public RegistrationEvent(int id,
			RegistrationLocation registrationLocation,
			String description, Date occurrenceDatetime,
			Set<VesselTransportMeans> vesselTransportMeanses) {
		this.id = id;
		this.registrationLocation = registrationLocation;
		this.description = description;
		this.occurrenceDatetime = occurrenceDatetime;
		this.vesselTransportMeanses = vesselTransportMeanses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "registration_location_id", nullable = false)
	public RegistrationLocation getRegistrationLocation() {
		return this.registrationLocation;
	}

	public void setRegistrationLocation(
			RegistrationLocation registrationLocation) {
		this.registrationLocation = registrationLocation;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "occurrence_datetime", length = 29)
	public Date getOccurrenceDatetime() {
		return this.occurrenceDatetime;
	}

	public void setOccurrenceDatetime(Date occurrenceDatetime) {
		this.occurrenceDatetime = occurrenceDatetime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "registrationEvent")
	public Set<VesselTransportMeans> getVesselTransportMeanses() {
		return this.vesselTransportMeanses;
	}

	public void setVesselTransportMeanses(
			Set<VesselTransportMeans> vesselTransportMeanses) {
		this.vesselTransportMeanses = vesselTransportMeanses;
	}

}

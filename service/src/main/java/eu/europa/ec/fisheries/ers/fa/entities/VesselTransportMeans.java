package eu.europa.ec.fisheries.ers.fa.entities;

// Generated 06-May-2016 14:29:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ActivityVesselTransportMeans generated by hbm2java
 */
@Entity
@Table(name = "activity_vessel_transport_means", schema = "activity")
public class VesselTransportMeans implements java.io.Serializable {

	private int id;
	private RegistrationEvent registrationEvent;
	private String roleCode;
	private String roleCodeListId;
	private String meansSchemaId;
	private String name;
	private String flapDocumentId;
	private String flapDocumentSchemeId;
	private Set<VesselCountry> vesselCountries = new HashSet<VesselCountry>(
			0);
	private Set<FaReportDocument> faReportDocuments = new HashSet<FaReportDocument>(
			0);
	private Set<ContactParty> contactParties = new HashSet<ContactParty>(
			0);
	private Set<VesselIdentifier> vesselIdentifiers = new HashSet<VesselIdentifier>(
			0);

	public VesselTransportMeans() {
	}

	public VesselTransportMeans(int id) {
		this.id = id;
	}

	public VesselTransportMeans(int id,
			RegistrationEvent registrationEvent,
			String roleCode, String roleCodeListId, String meansSchemaId,
			String name, String flapDocumentId, String flapDocumentSchemeId,
			Set<VesselCountry> vesselCountries,
			Set<FaReportDocument> faReportDocuments,
			Set<ContactParty> contactParties,
			Set<VesselIdentifier> vesselIdentifiers) {
		this.id = id;
		this.registrationEvent = registrationEvent;
		this.roleCode = roleCode;
		this.roleCodeListId = roleCodeListId;
		this.meansSchemaId = meansSchemaId;
		this.name = name;
		this.flapDocumentId = flapDocumentId;
		this.flapDocumentSchemeId = flapDocumentSchemeId;
		this.vesselCountries = vesselCountries;
		this.faReportDocuments = faReportDocuments;
		this.contactParties = contactParties;
		this.vesselIdentifiers = vesselIdentifiers;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "registration_event_id")
	public RegistrationEvent getRegistrationEvent() {
		return this.registrationEvent;
	}

	public void setRegistrationEvent(
			RegistrationEvent registrationEvent) {
		this.registrationEvent = registrationEvent;
	}

	@Column(name = "role_code")
	public String getRoleCode() {
		return this.roleCode;
	}

	public void setRoleCode(String roleCode) {
		this.roleCode = roleCode;
	}

	@Column(name = "role_code_list_id")
	public String getRoleCodeListId() {
		return this.roleCodeListId;
	}

	public void setRoleCodeListId(String roleCodeListId) {
		this.roleCodeListId = roleCodeListId;
	}

	@Column(name = "means_schema_id")
	public String getMeansSchemaId() {
		return this.meansSchemaId;
	}

	public void setMeansSchemaId(String meansSchemaId) {
		this.meansSchemaId = meansSchemaId;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "flap_document_id")
	public String getFlapDocumentId() {
		return this.flapDocumentId;
	}

	public void setFlapDocumentId(String flapDocumentId) {
		this.flapDocumentId = flapDocumentId;
	}

	@Column(name = "flap_document_scheme_id")
	public String getFlapDocumentSchemeId() {
		return this.flapDocumentSchemeId;
	}

	public void setFlapDocumentSchemeId(String flapDocumentSchemeId) {
		this.flapDocumentSchemeId = flapDocumentSchemeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vesselTransportMeans")
	public Set<VesselCountry> getVesselCountries() {
		return this.vesselCountries;
	}

	public void setVesselCountries(
			Set<VesselCountry> vesselCountries) {
		this.vesselCountries = vesselCountries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vesselTransportMeans")
	public Set<FaReportDocument> getFaReportDocuments() {
		return this.faReportDocuments;
	}

	public void setFaReportDocuments(
			Set<FaReportDocument> faReportDocuments) {
		this.faReportDocuments = faReportDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vesselTransportMeans")
	public Set<ContactParty> getContactParties() {
		return this.contactParties;
	}

	public void setContactParties(
			Set<ContactParty> contactParties) {
		this.contactParties = contactParties;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vesselTransportMeans")
	public Set<VesselIdentifier> getVesselIdentifiers() {
		return this.vesselIdentifiers;
	}

	public void setVesselIdentifiers(
			Set<VesselIdentifier> vesselIdentifiers) {
		this.vesselIdentifiers = vesselIdentifiers;
	}

}
